#!/bin/csh -f


#***  Print help message if -h or -help specified ***
if ($#argv != 0 ) then 
# echo $#argv
  if (($argv[1] == "-h") || ($argv[1] == "-help")) then 
    echo ""
    echo "  Usage: roc_reboot roc_name"
    echo "  ---------------------------"
    echo "  List of possible ROC names:"
    echo "    dc5 dc6 dc11 dc12"
    echo "    lac1 cc1 cc2 ec1 ec2 sc1 tage3 pcalfb"
    echo "    scaler1 scaler2 scaler3 scaler4"
    echo "    pretrig1 pretrig2 camac1 camac2 sc-laser1"
    echo "    dccntrl ioctorus1 iocptarg clasgas"
    echo "    classc1 classc2 classc3 classc4 classc5 classc6 classc7 classc8 classc12"
    echo "    primexts2 primexroc4 primexroc5 primexroc6 primexioc1 primexioc2"
    echo "    croctest4"
    echo "  -------------------------------------------"
    echo "  List of possible snmp-controlled ROC names:"
    echo "    dc1 dc2 dc3 dc4 dc7 dc8 dc9 dc10 tage tage2 polar taggermac"
    echo "    clastrig2 sc2 ec3 ec4 lac2 ctof1 pretrig3 pretrig4"
    echo "    croctest1 croctest2 hps2 croctest10"
    echo "    roc1 halldtrg3 jlab12vme adcctof1 tdcctof1 hpsioc1 svt1"
    echo "    wolfram1 ftof0 ftof1 cnd1 trig1 trig2 dcrb2"
    echo "  --------------------------------------------------"
    echo "  List of possible PowerSwitch-controlled ROC names:"
    echo "    hpstracker hpsatca"
###    echo "    classc0 croctest333"
    echo "  --------------------------------------------------"
    echo "  List of possible software IOC names:"
    echo "    clonpc1 clonpc2 clonpc3"
    echo ""
    exit(0)
  endif
endif


# group definitions
set group=1
set group_snmp=2
set group_PwSw=3
set group_softioc=4


#***  Transliterate input argv to lower-case characters ***
set roc = `echo $1 | tr '[A-Z]' '[a-z]' `


#***  Set list of ROCs ***
#
set roc_name = ( scaler1 scaler2 scaler3 scaler4 \
                 pretrig1 pretrig2 camac1 camac2 sc-laser1 \
                 dccntrl ioctorus1 iocptarg clasgas \
                 classc1 classc2 classc3 classc4 classc5 classc6 classc7 classc8 classc12 \
                 primexts2 primexroc4 primexroc5 primexroc6 primexioc1 primexioc2 \
                 croctest4)


#***  Set list of ROCs Power Switch - controlled ***
#     8 Outlet Remote Power Control Switch
#       - installed in Hall-B CH
#       - has RS232 Interface
#       - manufactured by StarTech.com
#       - model: PCM815SHNA  SN: 0545000080
#
###set roc_name_PwSw = ( classc0 croctest333 )
set roc_name_PwSw = ( hpstracker hpsatca )


#***  Set list of ROCs snmp-controlled ***
#
set roc_name_snmp = ( dc11       dc12       dc13       dc21       \
                      dc22       dc23       dc31       dc32       \
                      dc33       dc41       dc42       dc43       \
                      dc51       dc52       dc53       dc61       \
                      dc62       dc63       tage       polar      \
                      taggermac  adccnd1    ltcc0      ioctest0   \
                      ioctest1   pcal0      pretrig3   pretrig4   \
                      croctest1  croctest2  hps2       croctest10 \
                      roc1       halldtrg3  jlab12vme  tdcctof1      \
                      adcecal1   svt1       wolfram1   hps12      \
                      hps1       hps2       cnd1       tdcecal1   \
                      tdcpcal1   tdcftof1   adcpcal1   adcftof1   \
                      adcecal1   adcftof6   tdcftof6   adcpcal6   \
                      tdcpcal6   adcecal6   tdcecal6   adcecal5   \
                      tdcecal5   adcpcal5   tdcpcal5   adcftof5   \
                      tdcftof5   adcecal4   tdcecal4   adcpcal4   \
                      tdcpcal4   adcftof4   tdcftof4   adcecal2   \
                      tdcecal2   adcpcal2   tdcpcal2   adcftof2   \
                      tdcftof2   adcecal3   tdcecal3   adcpcal3   \
                      tdcpcal3   adcftof3   tdcftof3   hps11 \
                      highbtest3 dcrb2      trig1      trig2 \
                      svt4       svt3       svt2       adcctof1 \
                      mvt1       mmft1      adcft1     adcft2 \
                      adcft3     pgem       prad1      prad2 \
                      prad3      fevme1 )


#***  Set IP list for ROCs snmp-controlled ***
set ip_snmp = ( 129.57.68.184   129.57.68.179   129.57.68.181   129.57.68.183  \
                129.57.68.178   129.57.68.168   129.57.68.169   129.57.68.175  \
                129.57.68.172   129.57.68.170   129.57.68.176   129.57.68.173  \
                129.57.68.171   129.57.68.177   129.57.68.174   129.57.68.185  \
                129.57.68.180   129.57.68.182   129.57.160.137  129.57.69.33  \
                129.57.160.138  129.57.160.151  129.57.86.47    129.57.167.83  \
                129.57.167.85   129.57.86.175   129.57.69.32    129.57.69.47   \
                129.57.69.30    129.57.69.28    129.57.69.40    129.57.69.29   \
                129.57.167.104  129.57.167.47   129.57.167.56   129.57.160.158   \
                129.57.167.80   129.57.86.114   129.57.86.34    129.57.167.20  \
                129.57.167.164  129.57.167.165  129.57.86.53    129.57.167.52  \
                129.57.167.54   129.57.167.73   129.57.167.81   129.57.167.156 \
                129.57.167.80   129.57.167.157  129.57.167.158  129.57.167.39  \
                129.57.167.163  129.57.167.38   129.57.167.40   129.57.167.169 \
                129.57.167.170  129.57.167.171  129.57.167.176  129.57.167.177 \
                129.57.167.178  129.57.167.189  129.57.167.186  129.57.167.188 \
                129.57.167.185  129.57.167.187  129.57.167.183  129.57.167.212 \
                129.57.167.192  129.57.167.216  129.57.167.211  129.57.167.251 \
                129.57.167.21   129.57.167.32   129.57.167.22   129.57.167.34  \
                129.57.167.19   129.57.167.37   129.57.167.27   129.57.167.93 \
                129.57.86.40    129.57.86.67    129.57.167.196  129.57.167.199 \
                129.57.86.71    129.57.86.140   129.57.86.123   129.57.160.60 \
                129.57.86.83    129.57.68.198   129.57.68.192   129.57.68.194 \
                129.57.68.196   129.57.160.146  129.57.160.147  129.57.160.148 \
                129.57.160.149  129.57.86.98 )

#***  Set list of soft-IOCS rebooted via service command ***
#
set roc_name_softioc = ( clonpc1 clonpc2 clonpc3 )


#*** Check ROC name ***
set ii = -1
set ii_PwSw = 0
set ii_snmp = 0
set ii_softioc = 0

foreach word ($roc_name)
  if ( $roc == $word ) set ii = 0
end
#echo ii = $ii

if ( $ii == -1 ) then
  foreach word ($roc_name_PwSw)
    @ ii_PwSw++
    if ( $roc == $word ) set ii = $ii_PwSw ; set group = $group_PwSw
#    echo ii = $ii ii_PwSw = $ii_PwSw roc = $roc word = $word
  end
endif

if ( $ii == -1 ) then
  foreach word ($roc_name_snmp)
    @ ii_snmp++
    if ( $roc == $word ) set ii = $ii_snmp ; set group = $group_snmp
#    echo ii = $ii ii_snmp = $ii_snmp roc = $roc word = $word
  end
endif

if ( $ii == -1 ) then
  foreach word ($roc_name_softioc)
    @ ii_softioc++
    if ( $roc == $word ) set ii = $ii_softioc ; set group = $group_softioc
#    echo ii = $ii ii_softioc = $ii_softioc roc = $roc word = $word
  end
endif

if ( $ii == -1 ) then
  echo ""
  echo " Unknown ROC. Please check the ROC name."
  echo "              Use -h for help."
  echo ""
  exit (-1)
endif


#*** Reboot ROC ***

if ( $group == $group_snmp ) then
#
#***** snmp-controlled ROCs processing :
#

#----------  SP: CPU in pretrig4 Dec.01, 2011
#----------  Switch OFF secondary VME crate pretrig4
  if ( $roc == "pretrig3" ) then
    snmpset -v 1 -c private 129.57.69.47 enterprises.19947.1.1.1.0 i 0
    sleep 5
  endif

  set ip = ${ip_snmp[$ii]}
  snmpset -v 1 -c private $ip enterprises.19947.1.1.1.0 i 0
  sleep 5
  snmpset -v 1 -c private $ip enterprises.19947.1.1.1.0 i 1

#----------  SP: CPU in pretrig4 Dec.01, 2011
#----------  Switch ON secondary VME crate pretrig4
  if ( $roc == "pretrig3" ) then
    sleep 10
    snmpset -v 1 -c private 129.57.69.47 enterprises.19947.1.1.1.0 i 1
  endif


else if ( $group == $group_PwSw ) then
#
#***** Power Switch - controlled ROCs processing :
#
  remote_recycle.tcl  $roc >& /dev/null &
  echo "$roc node rebooting is in progress"


else if ( $group == $group_softioc ) then
#
#***** software IOC reboot via service command :
#
  ssh clasrun@$roc "setenv  SUDO_ASKPASS $CODA/common/scripts/remote_softioc.sh ; sudo -A /etc/init.d/softioc restart" >& /dev/null &
  echo "$roc node rebooting is in progress"


else
#
#***** reset board - controlled ROCs processing :
#
  remote_reboot.tcl  $roc >& /dev/null &
  echo "$roc node rebooting is in progress"

  if ( $roc == "tage3" ) then
    sleep 3
    remote_reboot.tcl  $roc >& /dev/null &
  endif

endif


exit (0)

